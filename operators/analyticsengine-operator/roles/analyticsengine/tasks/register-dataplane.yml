-  name: Get the {{ name }} register dataplane deployment details
   k8s_info:
      kind: Deployment
      name: '{{ name }}-register-hb-dataplane'
      namespace: '{{ namespace }}'
   register: register_dataplane_deployment_info
   when: is_35_upgrade
   
-  name: Cleanup CPD 3.5 {{ name }} register dataplane deployments
   k8s:
      state: absent
      namespace: '{{ namespace }}'
      definition: '{{ lookup(''template'', ''register-dataplane.yaml.j2'') | from_yaml }}'
      delete_options:
         propagationPolicy: Background
   when: is_35_upgrade and ( register_dataplane_deployment_info.resources[0].metadata.labels.release is defined and register_dataplane_deployment_info.resources[0].metadata.labels.release
      == "ibm-spark-prod" )
      
-  name: Create configmap for {{ name }} register dataplane
   k8s:
      state: present
      namespace: '{{ namespace }}'
      apply: yes
      definition: '{{ lookup(''template'', item.name) | from_yaml }}'
   loop:
   -  name: register-dataplane-configmap.yaml.j2
   
-  name: Create deployment for {{ name }} register dataplane
   k8s:
      state: present
      namespace: '{{ namespace }}'
      apply: yes
      definition: '{{ lookup(''template'', item.name) | from_yaml }}'
   loop:
   -  name: register-dataplane.yaml.j2
   
-  name: Wait until the {{ name }} register dataplane deployment is ready
   k8s_info:
      kind: Deployment
      name: '{{ name }}-register-hb-dataplane'
      namespace: '{{ namespace }}'
   register: deployment_info
   retries: 60
   delay: 60
   until: deployment_info.resources[0].status.readyReplicas is defined and deployment_info.resources[0].status.availableReplicas
      is defined and ( deployment_info.resources[0].status.replicas == deployment_info.resources[0].status.readyReplicas )
      and ( deployment_info.resources[0].status.replicas == deployment_info.resources[0].status.availableReplicas )
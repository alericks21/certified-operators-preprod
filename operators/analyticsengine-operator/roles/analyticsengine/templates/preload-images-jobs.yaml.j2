apiVersion: batch/v1
kind: Job
metadata:
  name: {{ name }}-init-preload-jkg-image
  annotations:
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
    "hook.deactivate.cpd.ibm.com/command": "[]"
    "hook.activate.cpd.ibm.com/command": "[]"
  labels:
    function: {{ name }}-init-preload-jkg-image
{% if cpdLabels  %} 
    {{ cpdLabels | to_nice_yaml| indent(4) }}
{% endif %}
    run: {{ name }}-init-preload-jkg-image
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 7200
  parallelism: {{ preload_image.cronjob.job_replica }}
  completions: {{ preload_image.job.job_completion }}
  template:
    metadata:
{% if owner_reference is defined %}
      ownerReferences:
        {{ owner_reference | to_nice_yaml | indent(8) }}
{% endif %}
      annotations:
{% if metering  %} 
        {{ metering | to_nice_yaml| indent(8) }}
{% endif %}
      labels:
        function: {{ name }}-init-preload-jkg-image
{% if cpdLabels  %} 
        {{ cpdLabels | to_nice_yaml| indent(8) }}
{% endif %}
        run: {{ name }}-init-preload-jkg-image
    spec:
      serviceAccount: {{ sa.viewer }}
      serviceAccountName: {{ sa.viewer }}
      restartPolicy: OnFailure
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - {{ global.architecture }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: run
                  operator: In
                  values: 
                  - {{ name }}-init-preload-jkg-image
            topologyKey: kubernetes.io/hostname
      containers:
      - name: {{ name }}-preload-jkg-image1
{% if image_tags is defined and image_tags.tag30 is defined %}
{% set image_suffix = image_tags.tag30 %}
{% set image_separator = ":" %}
{% else %}
{% set image_suffix = image_digests.spark_runtime_v30 %}
{% set image_separator = "@" %}
{% endif %}
{% if pull_prefix is defined and pull_prefix.spark_runtime_v30 is defined %}
{% set image_prefix = pull_prefix.spark_runtime_v30 %}
{% else %}
{% set image_prefix = pullPrefix %}
{% endif %}
        image: "{{ image_prefix }}/{{ images.spark_runtime_v30 }}{{ image_separator }}{{ image_suffix }}"
        imagePullPolicy: {{ micro_service.pull_policy }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ preload_image.requests.cpu }}
            memory: {{ preload_image.requests.memory }}
          limits:
            cpu: {{ preload_image.limits.cpu }}
            memory: {{ preload_image.limits.memory }}
        command: ["echo", "Image {{ image_prefix }}/{{ images.spark_runtime_v30 }}{{ image_separator }}{{ image_suffix }} preloaded"]
      - name: {{ name }}-preload-jkg-image2
{% if image_tags is defined and image_tags.tag24 is defined %}
{% set image_suffix = image_tags.tag24 %}
{% set image_separator = ":" %}
{% else %}
{% set image_suffix = image_digests.spark_runtime_v24 %}
{% set image_separator = "@" %}
{% endif %}
{% if pull_prefix is defined and pull_prefix.spark_runtime_v24 is defined %}
{% set image_prefix = pull_prefix.spark_runtime_v24 %}
{% else %}
{% set image_prefix = pullPrefix %}
{% endif %}
        image: "{{ image_prefix }}/{{ images.spark_runtime_v24 }}{{ image_separator }}{{ image_suffix }}"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ preload_image.requests.cpu }}
            memory: {{ preload_image.requests.memory }}
          limits:
            cpu: {{ preload_image.limits.cpu }}
            memory: {{ preload_image.limits.memory }}
        command: ["echo", "Image {{ image_prefix }}/{{ images.spark_runtime_v24 }}{{ image_separator }}{{ image_suffix }} preloaded"]

---
- name: Get {{ name }} load db specs job status
  k8s_info:
    kind: Job
    name: "{{ name }}-load-db-specs"
    namespace: "{{ namespace }}"
  register: loadDbJoInfo

- name: Remove old existing {{ name }} load db spec job
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'load-db-specs.yaml.j2') | from_yaml }}"
    delete_options:
      propagationPolicy: "Background"
  when: loadDbJoInfo.resources | length != 0

- name: Create {{ name }} load db spec configmap
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'load-db-specs-configmap.yaml.j2') | from_yaml }}"

- name: Create {{ name }} load db spec job
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'load-db-specs.yaml.j2') | from_yaml }}"

- name: Wait until the {{ name }} load db spec job is comepleted
  k8s_info:
    kind: Job
    name: "{{ name }}-load-db-specs"
    namespace: "{{ namespace }}"
  register: job_info
  retries: 10
  delay: 20
  until: job_info.resources[0].status.conditions is defined and job_info.resources[0].status.conditions[0].type is defined and ( job_info.resources[0].status.conditions[0].type.find("Completed") != 1 )
  
- name: Remove completed {{ name }} load db spec job
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'load-db-specs.yaml.j2') | from_yaml }}"
    delete_options:
      propagationPolicy: "Background"
  when: job_info.resources | length != 0
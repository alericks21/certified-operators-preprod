---
- name: Create "{{ name }}" truststore configmap
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'create-trust-store-script-configmap.yaml.j2') | from_yaml }}"

- name: Create {{ name }} truststore job
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'create-trust-store-and-secret.yaml.j2') | from_yaml }}"

- name: Wait until the {{ name }} truststore deployment is ready
  k8s_info:
    kind: Deployment
    name: "{{ name }}-create-trust-store"
    namespace: "{{ namespace }}"
  register: deployment_info
  retries: 20
  delay: 20
  until: deployment_info.resources[0].status.readyReplicas is defined and deployment_info.resources[0].status.availableReplicas is defined and ( deployment_info.resources[0].status.replicas == deployment_info.resources[0].status.readyReplicas ) and ( deployment_info.resources[0].status.replicas == deployment_info.resources[0].status.availableReplicas )
  
- name: Get {{ trust_store.icp4d_ts_secret_name }} secret
  k8s_info:
    api_version: v1 
    kind: secret
    name: "{{ trust_store.icp4d_ts_secret_name }}"
    namespace: "{{ namespace }}"
  register: java_trust_store
  retries: 20
  delay: 20
  until: java_trust_store.resources | length == 1

- name: Get {{ trust_store.os_cert_secret_name }} secret
  k8s_info:
    api_version: v1
    kind: secret
    name: "{{ trust_store.os_cert_secret_name }}"
    namespace: "{{ namespace }}"
  register: os_trust_store
  retries: 20
  delay: 20
  until: os_trust_store.resources | length == 1
  
- name: Get {{ trust_store.zen_metastore_certs_secret_name }} secret
  k8s_info:
    api_version: v1
    kind: secret
    name: "{{ trust_store.zen_metastore_certs_secret_name }}"
    namespace: "{{ namespace }}"
  register: zen_metastore
  retries: 20
  delay: 20
  until: zen_metastore.resources | length == 1

- name: Delete certificate secrets if they doesn't have owner reference
  k8s:
    state: absent
    kind: secret
    namespace: "{{ namespace }}"
    name: "{{ item.name }}"
    delete_options:
      propagationPolicy: "Background"
  loop:
    - name: "{{ trust_store.icp4d_ts_secret_name }}"
    - name: "{{ trust_store.os_cert_secret_name }}"
    - name: "{{ trust_store.zen_metastore_certs_secret_name }}"
#  when: java_trust_store.resources[0].metadata.ownerReferences is not defined or os_trust_store.resources[0].metadata.ownerReferences is not defined or zen_metastore.resources[0].metadata.ownerReferences is not defined
  
- name: Apply labels & owner reference to certificate secrets
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', item.name) | from_yaml }}"
  loop:
    - name: create-java-trust-store-secret.yaml.j2
    - name: create-os-trust-store-secret.yaml.j2
    - name: create-zen-metastore-secret.yaml.j2
#  when: java_trust_store.resources[0].metadata.ownerReferences is not defined or os_trust_store.resources[0].metadata.ownerReferences is not defined or zen_metastore.resources[0].metadata.ownerReferences is not defined
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ name }}-preload-jkg-image
{% if owner_reference is defined %}
  ownerReferences:
    {{ owner_reference | to_nice_yaml | indent(4) }}
{% endif %}
  labels: 
    run: {{ name }}-preload-jkg-image
    function: {{ name }}-preload-jkg-image
{% if cpdLabels  %} 
    {{ cpdLabels | to_nice_yaml| indent(4) }}
{% endif %}
  annotations:
{% if metering  %} 
    {{ metering | to_nice_yaml| indent(4) }}
{% endif %}
spec:
  schedule: "{{ preload_image.cronjob.schedule }}"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
{% if owner_reference is defined %}
      ownerReferences:
        {{ owner_reference | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 600
      parallelism: {{ service_config.image_pull_parallelism }}
      completions: {{ service_config.image_pull_completions }}
      template:
        metadata:
{% if owner_reference is defined %}
          ownerReferences:
            {{ owner_reference | to_nice_yaml | indent(12) }}
{% endif %}
          annotations:
{% if metering  %} 
            {{ metering | to_nice_yaml| indent(12) }}
{% endif %}
          labels:
            run: {{ name }}-preload-jkg-image
            function: {{ name }}-preload-jkg-image
{% if cpdLabels  %} 
            {{ cpdLabels | to_nice_yaml| indent(12) }}
{% endif %}
        spec:
          serviceAccount: {{ sa.viewer }}
          serviceAccountName: {{ sa.viewer }}
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - {{ global.architecture }}
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: run
                      operator: In
                      values:
                      - {{ name }}-preload-jkg-image
                topologyKey: kubernetes.io/hostname
          hostNetwork: false
          hostPID: false
          hostIPC: false
          containers:
          - name: {{ name }}-preload-jkg-image1
{% if image_tags is defined and image_tags.tag30 is defined %}
{% set image_suffix = image_tags.tag30 %}
{% set image_separator = ":" %}
{% else %}
{% set image_suffix = image_digests.spark_runtime_v30 %}
{% set image_separator = "@" %}
{% endif %}
{% if pull_prefix is defined and pull_prefix.spark_runtime_v30 is defined %}
{% set image_prefix = pull_prefix.spark_runtime_v30 %}
{% else %}
{% set image_prefix = pullPrefix %}
{% endif %}
            image: "{{ image_prefix }}/{{ images.spark_runtime_v30 }}{{ image_separator }}{{ image_suffix }}"
            imagePullPolicy: IfNotPresent
            securityContext:
               allowPrivilegeEscalation: false
               capabilities:
                 drop:
                 - ALL
               runAsNonRoot: true
               privileged: false
               readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: {{ preload_image.requests.cpu }}
                memory: {{ preload_image.requests.memory }}
              limits:
                cpu: {{ preload_image.limits.cpu }}
                memory: {{ preload_image.limits.memory }}
            command: ["echo", "Image {{ image_prefix }}/{{ images.spark_runtime_v30 }}{{ image_separator }}{{ image_suffix }} preloaded"]
            readinessProbe:
              exec:
                command:
                - ls
              initialDelaySeconds: {{ readiness_probe.initial_delay_seconds }}
              periodSeconds: {{ readiness_probe.period_seconds }}
              failureThreshold: {{ readiness_probe.failure_threshold }}
              timeoutSeconds: {{ readiness_probe.timeout_seconds }}
            livenessProbe:
              exec:
                command:
                - ls
              initialDelaySeconds: {{ liveness_probe.initial_delay_seconds }}
              periodSeconds: {{ liveness_probe.period_seconds }}
              failureThreshold: {{ liveness_probe.failure_threshold }}
              timeoutSeconds: {{ liveness_probe.timeout_seconds }}
          - name: {{ name }}-preload-jkg-image2
{% if image_tags is defined and image_tags.tag24 is defined %}
{% set image_suffix = image_tags.tag24 %}
{% set image_separator = ":" %}
{% else %}
{% set image_suffix = image_digests.spark_runtime_v24 %}
{% set image_separator = "@" %}
{% endif %}
{% if pull_prefix is defined and pull_prefix.spark_runtime_v24 is defined %}
{% set image_prefix = pull_prefix.spark_runtime_v24 %}
{% else %}
{% set image_prefix = pullPrefix %}
{% endif %}
            image: "{{ image_prefix }}/{{ images.spark_runtime_v24 }}{{ image_separator }}{{ image_suffix }}"
            securityContext:
               allowPrivilegeEscalation: false
               capabilities:
                 drop:
                 - ALL
               runAsNonRoot: true
               privileged: false
               readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: {{ preload_image.requests.cpu }}
                memory: {{ preload_image.requests.memory }}
              limits:
                cpu: {{ preload_image.limits.cpu }}
                memory: {{ preload_image.limits.memory }}
            command: ["echo", "Image {{ image_prefix }}/{{ images.spark_runtime_v24 }}{{ image_separator }}{{ image_suffix }} preloaded"]
            readinessProbe:
              exec:
                command:
                - ls
              initialDelaySeconds: {{ readiness_probe.initial_delay_seconds }}
              periodSeconds: {{ readiness_probe.period_seconds }}
              failureThreshold: {{ readiness_probe.failure_threshold }}
              timeoutSeconds: {{ readiness_probe.timeout_seconds }}
            livenessProbe:
              exec:
                command:
                - ls
              initialDelaySeconds: {{ liveness_probe.initial_delay_seconds }}
              periodSeconds: {{ liveness_probe.period_seconds }}
              failureThreshold: {{ liveness_probe.failure_threshold }}
              timeoutSeconds: {{ liveness_probe.timeout_seconds }}
          restartPolicy: OnFailure

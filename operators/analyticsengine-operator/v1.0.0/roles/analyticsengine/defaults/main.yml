---
# defaults file for analyticsengine


# This is a YAML-formatted file.
# Change license to true to indicate you have read and agree to license agreements
license: "false"

namespace: op400

app: "analyticsengine"
release: "ibm-analyticsengine-prod"
name: spark-hb

appVersion: CHANGE_ME_APPVERSION

operation: "install"
pullPrefix: "cp.icr.io/cp/cpd"
docker_registry_user: iamapikey
docker_registry_pass: 
dockerRegistryUser: iamapikey
dockerRegistryPass: 

replicas: 1
deployer_agent_replicas: 2

images:
  db_spec: "spark-hb-db-spec"
  spark_runtime_v24: "spark-hb-jkg"
  spark_runtime_v30: "spark-hb-jkg"
  nginx: "spark-hb-nginx"
  trust_store: "spark-hb-truststore-util"
  dataplane_reg: "spark-hb-python"
  deployer_agent: "spark-hb-deployer-agent"
  control_plane: "spark-hb-control-plane"
  helm_repo: "spark-hb-helm-repo"
  cleanup_cron: "spark-hb-python"
  syslog: "spark-hb-rsyslog-sidecar"

sa:
  editor: zen-editor-sa
  viewer: zen-viewer-sa

icp4d:
  nginx_url: https://internal-nginx-svc:12443/v2/spark
  environment_url: https://internal-nginx-svc:12443
  is_fips_enabled: "false"

charts:
  create_kernel: create-kernel-icp4d-1.1.1.tgz
  create_kernel_v3: create-kernel-v3-icp4d-1.1.1.tgz 
  create_job_v1: spark-submit-job-1.1.1.tgz
  create_job_v2: spark-submit-job-v2-icp4d-1.1.1.tgz
  create_job_v3: spark-submit-job-v3-icp4d-1.1.1.tgz
  create_job_v4: spark-submit-job-v4-icp4d-1.1.1.tgz
  delete_kernel: delete-kernel-icp4d-1.1.1.tgz

# Use by image-secret.yaml
global:
  docker_registry_prefix: cp.stg.icr.io/cp/cpd
  container_platform: "icp"
  architecture: "{{ architecture if architecture is defined else 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"
  ibm_product: ""
  add_on_id: "spark"
  cloudpak_instance_id: "test"

spark_metastoredb:
  cockroachdb: true
  postgres_secret_name: postgres
  database_user: spark_user
  database_name: spark
  database_host: zen-metastoredb-public
  database_port: 26257
  database_ssl_mode: require
  database_client_cert: "client.spark_user.crt"
  database_client_key: "client.spark_user.key"
  database_client_key_pkcs8: "client.spark_user.key.pk8"
  database_root_cert: "ca.crt"
  certs_path: /opt/hb/confidential_config/zenmetastore_certs

# Use by micro-service-confidential-properties.yaml, micro-service-configmap.yaml
iam:
  service_token: iam_dummy_token
  dataplane:
    service_token: iam_dummy_token

db:
  version: 6

spark:
  image:
    tag: 4.0.0001-amd64
    tag24: 2.4.7.v13-amd64
    tag30: 3.0.1.v13-amd64

db_spec:
  script_path: /opt/ibm/entrypoint/
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi

create_secret_job:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi

zen_user_home_vol:
  name: user-home-pvc
  meta_store_cert_path: "_global_/security/metastore"
  jwt_cert_path: "_global_/config/jwt"

rabbit_mq:
  url_secret: "rabbitmq-url"
  cert_secret: "rabbitmq-ha-cert"
  cert_path: /opt/hb/rabbit-mq-certs
  url_secret_path: /opt/hb/rabbit-mq
  trust_store_secret_name: spark-hb-mq-trust-store

cleanup_cron:
  script_path: /root/scripts
  config_path: /root/cron_config
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi

kernel_cleanup_cron:
  schedule: "*/30 * * * *"

job_cleanup_cron:
  schedule: "*/30 * * * *"
  
terminating_pod_cleanup_cron:
  schedule: "*/30 * * * *"
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 200m
    memory: 256Mi
  
# Use by micro-services
  
kernel_service:
  path: ae
  context_root: "ae/v1"
  
job_service:
  path_v2: jobService/v2
  context_root: "jobService"

instance_manager_service:
  path: instance_manager/v1/instance
  context_root: "instance_manager/v1"
  
instance_manager_service_v2:
  context_root: "instance_manager/v2"
  
instance_manager_service_v3:
  context_root: "instance_manager/v3"
  path: "instance_manager/v3/instances"

data_plane_manager_service:
  path: dataplane_manager/v1/dataplane
  
helm_based_service:
  path: helmDeployer/v1/deployerDataPlane

zen_core: 
  tiller_endpoint: http://zen-core-api-svc:3333/v2/release
  
service_broker: 
  type: cpd

helm_repo:
  port: 9080
  requests:
    cpu: 50m
    memory: 64Mi
  limits:
    cpu: 50m
    memory: 64Mi
    
helm_readiness_probe:
  initial_delay_seconds: "1"
  period_seconds: "1"
  failure_threshold: "120"
helm_liveness_probe:
  initial_delay_seconds: "60"
  period_seconds: "30"
  failure_threshold: "120"
    
micro_service:
  scheme: https
  dataplane_scheme: http
  confidential_properties: /opt/hb/confidential_config
  deployment_config_path: /opt/hb/deployment_config
  resource_limit_path: /opt/hb/resource_limit
  wdp_properties_path: /opt/hb/confidential_config/wdp
  service_broker_token_path: /opt/hb/confidential_config/cpd_service_broker
  temp_zen_metastore_certs: /tmp/zenmetastore_certs_temp
  zen_metastore_certs: /opt/hb/confidential_config/zenmetastore_certs
  jwt_certs: /opt/hb/confidential_config/jwt
  path_prefix: /opt/hb
  trust_store_path: /opt/ibm/java/jre/lib/security
  mq_trust_store_path: /opt/hb/trust_store
  wdp_secret_name: wdp-service-id
  service_broker_token_secret: zen-service-broker-secret
  audit_event_logs_path: /var/log/audit
  rsyslog_config_path: /tmp/rsyslog.d
  port: 443
  target_port: 9443
  pull_policy: Always
  requests:
    cpu: 1.2
    memory: "2Gi"
  limits:
    cpu: 1.2
    memory: "2Gi"
  readiness_probe_scheme: HTTPS
  is_local_mode: "true"
  svc_type: ""
  enable_audit: "true"
readiness_probe:
  initial_delay_seconds: "180"
  period_seconds: "30"
  failure_threshold: "15"
  timeout_seconds: "5"
liveness_probe:
  initial_delay_seconds: "300"
  period_seconds: "60"
  failure_threshold: "120"
  timeout_seconds: "10"

deployer_agent:
  name: deployer-agent
  path: helm-deployer/v1/ping
  scheme: HTTPS
  port: 443
  target_port: 9443
  hb_bootstrap_config_enabled: false
  bootstrap_config_path: /opt/hb/bootstrap-config
#  bootstrapConfigFile: bootstrap-config.yaml
  hb_config_enabled: true
  config_path: /opt/hb/config
  hb_bootstrap_secret_enabled: false
  bootstrap_secret_path: /opt/hb/bootstrap-secret/bootstrap-secret.yaml
  hb_secret_enabled: false
  secret_path: /opt/hb/secret/secret.yaml
  hb_env_config_enabled: true
  hb_env_secret_enabled: false
  requests:
    cpu: "300m"
    memory: "512Mi"
  limits:
    cpu: "300m"
    memory: "512Mi"
  readiness_probe:
    initial_delay_seconds: "30"
    period_seconds: "30"
    failure_threshold: "15"
    timeout_seconds: "5"
  liveness_probe:
    initial_delay_seconds: "300"
    period_seconds: "120"
    failure_threshold: "120"
    timeout_seconds: "10"

# list of icp4d supported templates
templates:
  list: spark-2.4.0-jaas-v2-cp4d-template,spark-2.4.0-rstudio-icp4d-template,spark-2.4.0-shaper-v2-icp4d-template,spark-2.4.0-wml-icp4d-template

# data plane registration details
dataplane_reg:
  name: dataplane
  script_path: /opt/ibm/entrypoint/
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 200m
    memory: 256Mi
  readiness_probe:
    initial_delay_seconds: "300"
    period_seconds: "30"
    failure_threshold: "120"
  liveness_probe:
    initial_delay_seconds: "300"
    period_seconds: "60"
    failure_threshold: "120"
  
  
# trust store properties
trust_store:
  password: changeit
  icp4d_cert_path: /opt/hb/icp4d-certs
  cert_secret_name: internal-tls 
  cert_file_name: certificate.pem
  script_path: /opt/ibm/entrypoint/
  icp4d_ts_secret_name: spark-hb-java-trust-store
  os_cert_secret_name: spark-hb-os-trust-store
  zen_metastore_certs_secret_name: spark-hb-zen-metastore
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 200m
    memory: 256Mi
  readiness_probe:
    initial_delay_seconds: "1"
    period_seconds: "1"
    failure_threshold: "120"
  liveness_probe:
    initial_delay_seconds: "60"
    period_seconds: "30"
    failure_threshold: "120"

# data plane nfs details
nfs:
  path: /dummyPath/data1
  server: dummy.adn.networklayer.com

nginx_repo:
  nginx_conf_path: "/mnt/nginx"

nginx:
  name: "nginx"
  scheme: https
  request_cpu: "100m"
  request_memory: "128Mi"
  limit_cpu: "100m"
  limit_memory: "128Mi"
  container_port: "9999"
  port: "9999"
  worker_process: "5"
  worker_connection: "1024"
  cert_path: /etc/nginx/config/ssl
  readiness_probe:
    initial_delay_seconds: "1"
    period_seconds: "1"
    failure_threshold: "120"
  liveness_probe:
    initial_delay_seconds: "120"
    period_seconds: "30"

spark_master:
  component: "spark-master"

jkg:
  component: "jkg"
preload_image:
  requests:
    cpu: "0m"
    memory: "0Mi"
  limits:
    cpu: "0m"
    memory: "0Mi"
  job:
    job_completion: 32
  cronjob:
    job_replica: 40
    job_completion: 20
    schedule: "0 */2 * * *"

rsyslog:
  port: 5140
  target_host: "zen-audit-svc"
  driver_auth_mode: "x509/name"
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi
  readiness_probe:
    initial_delay_seconds: "300"
    period_seconds: "30"
    failure_threshold: "120"
  liveness_probe:
    initial_delay_seconds: "300"
    period_seconds: "60"
    failure_threshold: "120"

configs:
  audit_event_log_file: /var/log/audit/audit_events.log
